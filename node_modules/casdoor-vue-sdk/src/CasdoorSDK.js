"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _casdoorJsSdk = _interopRequireDefault(require("casdoor-js-sdk"));

var _vueDemi = require("vue-demi");

var _token = require("./token");

// Copyright 2022 The casbin Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
var _default = {
  install: function install(app, options) {
    var CasdoorSDK = new _casdoorJsSdk["default"](options);

    if (_vueDemi.isVue2) {
      app.prototype.getSignupUrl = function () {
        return CasdoorSDK.getSignupUrl();
      };

      app.prototype.getSigninUrl = function () {
        return CasdoorSDK.getSigninUrl();
      };

      app.prototype.getUserProfileUrl = function (userName, account) {
        return CasdoorSDK.getUserProfileUrl(userName, account);
      };

      app.prototype.getMyProfileUrl = function (account) {
        return CasdoorSDK.getMyProfileUrl(account);
      };

      app.prototype.signin = function (ServerUrl, signinPath) {
        return CasdoorSDK.signin(ServerUrl, signinPath);
      };

      app.prototype.isSilentSigninRequested = function () {
        return CasdoorSDK.isSilentSigninRequested();
      };

      app.prototype.silentSignin = function (onSuccess, onFailure) {
        return CasdoorSDK.silentSignin(onSuccess, onFailure);
      };
    } else {
      app.provide(_token.CASDOOR_SDK_INJECTION_KEY, {
        getSignupUrl: CasdoorSDK.getSignupUrl.bind(CasdoorSDK),
        getSigninUrl: CasdoorSDK.getSigninUrl.bind(CasdoorSDK),
        getUserProfileUrl: CasdoorSDK.getUserProfileUrl.bind(CasdoorSDK),
        getMyProfileUrl: CasdoorSDK.getMyProfileUrl.bind(CasdoorSDK),
        signin: CasdoorSDK.signin.bind(CasdoorSDK),
        isSilentSigninRequested: CasdoorSDK.isSilentSigninRequested.bind(CasdoorSDK),
        silentSignin: CasdoorSDK.silentSignin.bind(CasdoorSDK)
      });

      app.config.globalProperties.getSignupUrl = function () {
        return CasdoorSDK.getSignupUrl();
      };

      app.config.globalProperties.getSigninUrl = function () {
        return CasdoorSDK.getSigninUrl();
      };

      app.config.globalProperties.getUserProfileUrl = function (userName, account) {
        return CasdoorSDK.getUserProfileUrl(userName, account);
      };

      app.config.globalProperties.getMyProfileUrl = function (account) {
        return CasdoorSDK.getMyProfileUrl(account);
      };

      app.config.globalProperties.signin = /*#__PURE__*/function () {
        var _ref = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(ServerUrl) {
          var code, state, res;
          return _regenerator["default"].wrap(function _callee$(_context) {
            while (1) switch (_context.prev = _context.next) {
              case 0:
                code = window.location.href.split('code=')[1].split('&')[0];
                state = window.location.href.split('state=')[1].split('&')[0];
                _context.next = 4;
                return fetch("".concat(ServerUrl, "/api/signin?code=").concat(code, "&state=").concat(state), {
                  method: "POST",
                  credentials: "include"
                });

              case 4:
                res = _context.sent;
                _context.next = 7;
                return res.json();

              case 7:
                return _context.abrupt("return", _context.sent);

              case 8:
              case "end":
                return _context.stop();
            }
          }, _callee);
        }));

        return function (_x) {
          return _ref.apply(this, arguments);
        };
      }();

      app.config.globalProperties.isSilentSigninRequested = function () {
        return CasdoorSDK.isSilentSigninRequested();
      };

      app.config.globalProperties.silentSignin = function (onSuccess, onFailure) {
        return CasdoorSDK.silentSignin(onSuccess, onFailure);
      };
    }
  }
};
exports["default"] = _default;